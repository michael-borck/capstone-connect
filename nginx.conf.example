# Nginx Configuration for Curtin Capstone Connect
# Save as /etc/nginx/sites-available/capstone-connect
# Then: sudo ln -s /etc/nginx/sites-available/capstone-connect /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL Configuration
    ssl_certificate /path/to/your/fullchain.pem;
    ssl_certificate_key /path/to/your/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/javascript application/xml+rss application/json;
    gzip_disable "MSIE [1-6]\.";
    
    # Client Max Body Size (for file uploads)
    client_max_body_size 10M;
    
    # Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Main application
    location / {
        proxy_pass http://127.0.0.1:1077;
    }
    
    # Static files caching (optional - Node.js can handle this too)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass http://127.0.0.1:1077;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # API endpoints
    location /api/ {
        proxy_pass http://127.0.0.1:1077;
        # API-specific settings
        proxy_buffering off;
    }
    
    # Health check endpoint
    location /api/health {
        proxy_pass http://127.0.0.1:1077;
        access_log off;
    }
    
    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ /(database|config|logs|\.env) {
        deny all;
    }
}

# Optional: Rate limiting at nginx level
# Add to http block in /etc/nginx/nginx.conf:
# limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
# limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;

# Then use in location blocks:
# location /api/auth/ {
#     limit_req zone=auth burst=5 nodelay;
#     proxy_pass http://127.0.0.1:1077;
# }
# 
# location /api/ {
#     limit_req zone=api burst=10 nodelay;
#     proxy_pass http://127.0.0.1:1077;
# }